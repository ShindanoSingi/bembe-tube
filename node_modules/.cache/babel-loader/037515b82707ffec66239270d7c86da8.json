{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/Desktop/bembe-tube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mymac/Desktop/bembe-tube/src/Components/VideoPlayer.js\";\n// import axios from 'axios';\nimport React, { useState } from 'react';\nimport VideoIframe from '../Components/VideoIframe';\nimport VideoCardsPlayer from '../Components/VideoCardsPlayer';\nimport Header from '../Components/Header';\nimport '../Components/VideoPlayer.css';\nimport NavBarMiddle from '../Components/NavBarMiddle';\n\nfunction VideoPlayer(_ref) {\n  var videos = _ref.videos,\n      handleChange = _ref.handleChange,\n      handleSubmit = _ref.handleSubmit,\n      searchedString = _ref.searchedString,\n      userData = _ref.userData,\n      viewsFunc = _ref.viewsFunc,\n      getUserData = _ref.getUserData,\n      getaddToPlaylist = _ref.getaddToPlaylist,\n      videoId = _ref.videoId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoObject = _useState2[0],\n      setVideoObject = _useState2[1];\n\n  console.log(userData); // console.log(videos[0] !== 'undefined')\n  // const { id } = useParams()\n  // This array will hold added videos as playlist.\n  // let arrayPlaylist = [];\n  // const [addVideo, setAddedVideo] = useState('')\n  // This seState takes care of likes count. It will increament by 1 if Likes/thumbUp is clicked,\n  // and decreamentby 1 if dislike/thumbDown is clicked.\n  // const [likesDisLikeCount, setLikesDisLikeCount] = useState(0);\n  // Increament likes count by 1\n  // const increment = () => {\n  //     likesDisLikeCount === 0 ? setLikesDisLikeCount(likesDisLikeCount + 1) : setLikesDisLikeCount(likesDisLikeCount);\n  // }\n  // icreament likes count by 1\n  // const decrement = () => {\n  //     likesDisLikeCount === 1 ? setLikesDisLikeCount(likesDisLikeCount - 1) : setLikesDisLikeCount(likesDisLikeCount);\n  // }\n  // // This function will add a video url to the array\n  // let arrayPlaylistFunc = (id) => {\n  //     arrayPlaylist.push(`https://www.youtube.com/watch_popup?v=${id}`)\n  //     console.log(arrayPlaylist)\n  // }\n  // HandleChange on each keypress\n  // const handleChange = (event) => {\n  //     event.preventDefault();\n  //     setSearchedString(event.target.value);\n  // }\n  // HandleSubmit submits the searchedString to the getSearchedData function when \"the search icon is clicked\"\n  // const handleSubmit = (event) => {\n  //     event.preventDefault();\n  //     getSearchedData(searchedString)\n  //     setSearchedString('')\n  // }\n  // Let's use useEffect allow the API call once per call.\n  // useEffect(() => {\n  //     getSearchedData(searchedString)\n  //     // setSearchedString(searchedString)\n  // }, []);\n  // Provide the searched string to the yotube API.\n  // async function getSearchedData(searchedString) {\n  //     const axios = require(\"axios\");\n  //     const options = {\n  //         method: 'GET',\n  //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n  //         params: { q: searchedString },\n  //         headers: {\n  //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n  //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n  //         }\n  //     };\n  //     axios.request(options).then(function (response) {\n  //         setVideos(response.data.items)\n  //         setSuggestedVodeos(response.data.refinements)\n  //         // console.log(response.data);\n  //     }).catch(function (error) {\n  //         console.error(error);\n  //     });\n  // }\n  // This function gets the serched id and pass it the function\n  // useEffect(() => {\n  //     getSearchedId(id)\n  // }, [])\n  // Provide the searched string to the yotube API.\n  // async function getSearchedId(id) {\n  //     const axios = require(\"axios\");\n  //     const options = {\n  //         method: 'GET',\n  //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n  //         params: { q: id },\n  //         headers: {\n  //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n  //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n  //         }\n  //     };\n  //     axios.request(options).then(function (response) {\n  //         setVideos(response.data.items)\n  //         setSuggestedVodeos(response.data.refinements)\n  //         // console.log(response.data);\n  //     }).catch(function (error) {\n  //         console.error(error);\n  //     });\n  // }\n\n  var getVideoObject = function getVideoObject(video) {\n    setVideoObject(video);\n    console.log(videoObject);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-player-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    searchedString: searchedString,\n    userData: userData,\n    getUserData: getUserData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iframe-and-videoCards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iframe-and-navmiddle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VideoIframe, {\n    videos: videos,\n    getVideoObject: getVideoObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(NavBarMiddle, {\n    videoObject: videoObject,\n    viewsFunc: viewsFunc,\n    getaddToPlaylist: getaddToPlaylist,\n    videoId: videoId,\n    userData: userData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(VideoCardsPlayer, {\n    videos: videos,\n    viewsFunc: viewsFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }))) // /{/* Searched form\n  // <SearchForm\n  //     searchedString={searchedString}\n  //     handleChange={handleChange}\n  //     handleSubmit={handleSubmit}\n  // />\n  // {/* <h1 onClick={\n  //     () => getIndex(1)\n  // }>Click ME, I am Video Player</h1> */}\n  // {/* // <div className='iframe-and-videoCards-container' > */ }\n  // {/* // Video window with suggested videos */ }\n  // {/* // {/* <VideoIframe */ }\n  // {/* //     videos={videos}\n  //     suggestedVodeos={suggestedVideos}\n  // />  */}\n  // {/* The banner below the iframe containing Likes, dislikes, add to playlist...\n  //             <LikesAddPlaylist // {/* Pass the arraylist function to capture all added videos */}\n  // {/* arrayPlaylistFunc={arrayPlaylistFunc}\n  //                 increment={increment}\n  //                 decrement={decrement}\n  //                 likesDisLikeCount={likesDisLikeCount}\n  //             {/* /> */}\n  // {/* Display video cards\n  // <VideoCardsPlayer videos={videos}\n  //     suggestedVodeos={suggestedVideos}\n  // /> */}\n  // {/* </div> */ }\n  ;\n}\n\nexport default VideoPlayer;","map":{"version":3,"names":["React","useState","VideoIframe","VideoCardsPlayer","Header","NavBarMiddle","VideoPlayer","videos","handleChange","handleSubmit","searchedString","userData","viewsFunc","getUserData","getaddToPlaylist","videoId","videoObject","setVideoObject","console","log","getVideoObject","video"],"sources":["/Users/mymac/Desktop/bembe-tube/src/Components/VideoPlayer.js"],"sourcesContent":["// import axios from 'axios';\nimport React, { useState } from 'react'\nimport VideoIframe from '../Components/VideoIframe';\nimport VideoCardsPlayer from '../Components/VideoCardsPlayer';\nimport Header from '../Components/Header';\nimport '../Components/VideoPlayer.css';\nimport NavBarMiddle from '../Components/NavBarMiddle';\n\n\nfunction VideoPlayer({ videos, handleChange, handleSubmit, searchedString, userData, viewsFunc, getUserData, getaddToPlaylist, videoId }) {\n\n    const [videoObject, setVideoObject] = useState({})\n\n\n    console.log(userData)\n    // console.log(videos[0] !== 'undefined')\n    // const { id } = useParams()\n\n    // This array will hold added videos as playlist.\n    // let arrayPlaylist = [];\n    // const [addVideo, setAddedVideo] = useState('')\n\n    // This seState takes care of likes count. It will increament by 1 if Likes/thumbUp is clicked,\n    // and decreamentby 1 if dislike/thumbDown is clicked.\n    // const [likesDisLikeCount, setLikesDisLikeCount] = useState(0);\n\n    // Increament likes count by 1\n    // const increment = () => {\n    //     likesDisLikeCount === 0 ? setLikesDisLikeCount(likesDisLikeCount + 1) : setLikesDisLikeCount(likesDisLikeCount);\n    // }\n\n    // icreament likes count by 1\n    // const decrement = () => {\n    //     likesDisLikeCount === 1 ? setLikesDisLikeCount(likesDisLikeCount - 1) : setLikesDisLikeCount(likesDisLikeCount);\n    // }\n\n    // // This function will add a video url to the array\n    // let arrayPlaylistFunc = (id) => {\n    //     arrayPlaylist.push(`https://www.youtube.com/watch_popup?v=${id}`)\n    //     console.log(arrayPlaylist)\n    // }\n\n    // HandleChange on each keypress\n    // const handleChange = (event) => {\n    //     event.preventDefault();\n    //     setSearchedString(event.target.value);\n    // }\n\n    // HandleSubmit submits the searchedString to the getSearchedData function when \"the search icon is clicked\"\n    // const handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     getSearchedData(searchedString)\n    //     setSearchedString('')\n    // }\n\n    // Let's use useEffect allow the API call once per call.\n    // useEffect(() => {\n    //     getSearchedData(searchedString)\n    //     // setSearchedString(searchedString)\n    // }, []);\n\n\n    // Provide the searched string to the yotube API.\n    // async function getSearchedData(searchedString) {\n\n    //     const axios = require(\"axios\");\n\n    //     const options = {\n    //         method: 'GET',\n    //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n    //         params: { q: searchedString },\n    //         headers: {\n    //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n    //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n    //         }\n    //     };\n\n    //     axios.request(options).then(function (response) {\n    //         setVideos(response.data.items)\n    //         setSuggestedVodeos(response.data.refinements)\n    //         // console.log(response.data);\n\n    //     }).catch(function (error) {\n    //         console.error(error);\n    //     });\n    // }\n\n    // This function gets the serched id and pass it the function\n    // useEffect(() => {\n    //     getSearchedId(id)\n    // }, [])\n\n    // Provide the searched string to the yotube API.\n    // async function getSearchedId(id) {\n\n    //     const axios = require(\"axios\");\n\n    //     const options = {\n    //         method: 'GET',\n    //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n    //         params: { q: id },\n    //         headers: {\n    //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n    //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n    //         }\n    //     };\n\n    //     axios.request(options).then(function (response) {\n    //         setVideos(response.data.items)\n    //         setSuggestedVodeos(response.data.refinements)\n    //         // console.log(response.data);\n\n    //     }).catch(function (error) {\n    //         console.error(error);\n    //     });\n    // }\n\n    const getVideoObject = (video) => {\n        setVideoObject(video)\n        console.log(videoObject)\n    }\n\n    return (\n\n        <div className='video-player-body'>\n\n            <Header handleChange={handleChange} handleSubmit={handleSubmit} searchedString={searchedString} userData={userData} getUserData={getUserData} />\n\n            <div className='iframe-and-videoCards-container' >\n\n                <div className='iframe-and-navmiddle-container'>\n                    <VideoIframe videos={videos} getVideoObject={getVideoObject} />\n                    <NavBarMiddle videoObject={videoObject} viewsFunc={viewsFunc} getaddToPlaylist={getaddToPlaylist} videoId={videoId} userData={userData} />\n                </div>\n\n\n                {/* Display video cards */}\n                <VideoCardsPlayer videos={videos} viewsFunc={viewsFunc}\n                />\n\n            </div>\n        </div>\n\n        // /{/* Searched form\n        // <SearchForm\n        //     searchedString={searchedString}\n        //     handleChange={handleChange}\n        //     handleSubmit={handleSubmit}\n        // />\n\n        // {/* <h1 onClick={\n        //     () => getIndex(1)\n        // }>Click ME, I am Video Player</h1> */}\n\n        // {/* // <div className='iframe-and-videoCards-container' > */ }\n\n        // {/* // Video window with suggested videos */ }\n        // {/* // {/* <VideoIframe */ }\n        // {/* //     videos={videos}\n        //     suggestedVodeos={suggestedVideos}\n        // />  */}\n\n        // {/* The banner below the iframe containing Likes, dislikes, add to playlist...\n        //             <LikesAddPlaylist // {/* Pass the arraylist function to capture all added videos */}\n        // {/* arrayPlaylistFunc={arrayPlaylistFunc}\n        //                 increment={increment}\n        //                 decrement={decrement}\n        //                 likesDisLikeCount={likesDisLikeCount}\n        //             {/* /> */}\n\n        // {/* Display video cards\n        // <VideoCardsPlayer videos={videos}\n        //     suggestedVodeos={suggestedVideos}\n        // /> */}\n\n        // {/* </div> */ }\n\n\n    )\n}\n\nexport default VideoPlayer"],"mappings":"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"},"metadata":{},"sourceType":"module"}