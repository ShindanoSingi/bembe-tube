{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/Desktop/bembe-tube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mymac/Desktop/bembe-tube/src/Components/VideoIframe.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // import OnLoadPage from '../Components/OnLoadPage';\n\nimport \"../Components/VideoIframe.css\";\n\nfunction VideoIframe(_ref) {\n  var videos = _ref.videos,\n      getPlayedVideoInfo = _ref.getPlayedVideoInfo,\n      getVideoObject = _ref.getVideoObject;\n\n  // To capture the information of each video playing video, \"videos\" will be filtered\n  // to return the video that includes the id is equal to the played video's id.\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      playingVideoInfo = _useState2[0],\n      setPlayingVideoInfo = _useState2[1]; // console.log(useParams())\n\n\n  var url = \"\"; // console.log(videos[0])\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var playedVideoInfo = videos.filter(function (video) {\n    if (video.id === id) {\n      // console.log(video)\n      getVideoObject(video);\n    }\n  }); // If the user has not submitted a request for video, display a \"Plese wait...\" message.\n  // if (videos.length < 1) {\n  // \treturn (\n  // \t\t\t<OnLoadPage />\n  // \t\t )\n  //  }\n  // else {\n  // console.log(id)\n\n  if (id === \":id\") {\n    url = \"https://www.youtube.com/watch_popup?v=yKJVlADjpus\";\n    return /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"h-auto w-fullscreen iframe-home iframe-player\",\n      title: \"video\",\n      src: url,\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    });\n  } // getPlayedVideoInfo = { getPlayedVideoInfo }\n  else {\n    url = \"https://www.youtube.com/watch_popup?v=\".concat(id);\n    return /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"iframe-home iframe-player\",\n      title: \"video\",\n      src: url,\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      getPlayedVideoInfo: getPlayedVideoInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  } //  }\n\n}\n\nexport default VideoIframe;","map":{"version":3,"names":["React","useState","useParams","VideoIframe","videos","getPlayedVideoInfo","getVideoObject","playingVideoInfo","setPlayingVideoInfo","url","id","playedVideoInfo","filter","video"],"sources":["/Users/mymac/Desktop/bembe-tube/src/Components/VideoIframe.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\n// import OnLoadPage from '../Components/OnLoadPage';\nimport \"../Components/VideoIframe.css\"\n\nfunction VideoIframe({ videos, getPlayedVideoInfo, getVideoObject }) {\n  // To capture the information of each video playing video, \"videos\" will be filtered\n  // to return the video that includes the id is equal to the played video's id.\n  const [playingVideoInfo, setPlayingVideoInfo] = useState(null)\n  // console.log(useParams())\n  let url = \"\"\n\n  // console.log(videos[0])\n  const { id } = useParams()\n\n  const playedVideoInfo = videos.filter((video) => {\n    if (video.id === id) {\n      // console.log(video)\n      getVideoObject(video)\n    }\n  })\n\n  // If the user has not submitted a request for video, display a \"Plese wait...\" message.\n  // if (videos.length < 1) {\n  // \treturn (\n  // \t\t\t<OnLoadPage />\n  // \t\t )\n  //  }\n\n  // else {\n\n  // console.log(id)\n\n  if (id === \":id\") {\n    url = `https://www.youtube.com/watch_popup?v=yKJVlADjpus`\n    return (\n      <iframe\n        className=\"h-auto w-fullscreen iframe-home iframe-player\"\n        title=\"video\"\n        src={url}\n        frameBorder=\"0\"\n        allowFullScreen\n      />\n    )\n  }\n  // getPlayedVideoInfo = { getPlayedVideoInfo }\n  else {\n    url = `https://www.youtube.com/watch_popup?v=${id}`\n    return (\n      <iframe\n        className=\"iframe-home iframe-player\"\n        title=\"video\"\n        src={url}\n        frameBorder=\"0\"\n        allowFullScreen\n        getPlayedVideoInfo={getPlayedVideoInfo}\n      />\n    )\n  }\n\n  //  }\n}\n\nexport default VideoIframe\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,OAAO,+BAAP;;AAEA,SAASC,WAAT,OAAqE;EAAA,IAA9CC,MAA8C,QAA9CA,MAA8C;EAAA,IAAtCC,kBAAsC,QAAtCA,kBAAsC;EAAA,IAAlBC,cAAkB,QAAlBA,cAAkB;;EACnE;EACA;EAFmE,gBAGnBL,QAAQ,CAAC,IAAD,CAHW;EAAA;EAAA,IAG5DM,gBAH4D;EAAA,IAG1CC,mBAH0C,kBAInE;;;EACA,IAAIC,GAAG,GAAG,EAAV,CALmE,CAOnE;;EAPmE,iBAQpDP,SAAS,EAR2C;EAAA,IAQ3DQ,EAR2D,cAQ3DA,EAR2D;;EAUnE,IAAMC,eAAe,GAAGP,MAAM,CAACQ,MAAP,CAAc,UAACC,KAAD,EAAW;IAC/C,IAAIA,KAAK,CAACH,EAAN,KAAaA,EAAjB,EAAqB;MACnB;MACAJ,cAAc,CAACO,KAAD,CAAd;IACD;EACF,CALuB,CAAxB,CAVmE,CAiBnE;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;;EAEA,IAAIH,EAAE,KAAK,KAAX,EAAkB;IAChBD,GAAG,sDAAH;IACA,oBACE;MACE,SAAS,EAAC,+CADZ;MAEE,KAAK,EAAC,OAFR;MAGE,GAAG,EAAEA,GAHP;MAIE,WAAW,EAAC,GAJd;MAKE,eAAe,MALjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF;EASD,CAXD,CAYA;EAZA,KAaK;IACHA,GAAG,mDAA4CC,EAA5C,CAAH;IACA,oBACE;MACE,SAAS,EAAC,2BADZ;MAEE,KAAK,EAAC,OAFR;MAGE,GAAG,EAAED,GAHP;MAIE,WAAW,EAAC,GAJd;MAKE,eAAe,MALjB;MAME,kBAAkB,EAAEJ,kBANtB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF;EAUD,CArDkE,CAuDnE;;AACD;;AAED,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}