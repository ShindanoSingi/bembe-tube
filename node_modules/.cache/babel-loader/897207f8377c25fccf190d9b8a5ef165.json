{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/Desktop/bembe-tube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mymac/Desktop/bembe-tube/src/Components/VideoIframe.js\";\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom'; // import OnLoadPage from '../Components/OnLoadPage';\n\nimport '../Components/VideoIframe.css';\n\nfunction VideoIframe(_ref) {\n  var videos = _ref.videos,\n      getPlayedVideoInfo = _ref.getPlayedVideoInfo,\n      getVideoObject = _ref.getVideoObject;\n\n  // To capture the information of each video playing video, \"videos\" will be filtered \n  // to return the video that includes the id is equal to the played video's id.\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      playingVideoInfo = _useState2[0],\n      setPlayingVideoInfo = _useState2[1]; // console.log(useParams())\n\n\n  var url = ''; // console.log(videos[0])\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var playedVideoInfo = videos.filter(function (video) {\n    if (video.id === id) {\n      // console.log(video)\n      getVideoObject(video);\n    }\n  }); // If the user has not submitted a request for video, display a \"Plese wait...\" message.\n  // if (videos.length < 1) {\n  // \treturn (\n  // \t\t\t<OnLoadPage />    \n  // \t\t )\n  //  }\n  // else { \n  // console.log(id)\n\n  if (id === ':id') {\n    url = \"https://www.youtube.com/watch_popup?v=yKJVlADjpus\";\n    return /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"iframe-home iframe-player\",\n      title: \"video\",\n      src: url,\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    });\n  } // getPlayedVideoInfo = { getPlayedVideoInfo } \n  else {\n    url = \"https://www.youtube.com/watch_popup?v=\".concat(id);\n    return /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"iframe-home iframe-player\",\n      title: \"video\",\n      src: url,\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      getPlayedVideoInfo: getPlayedVideoInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    });\n  } //  }\n\n}\n\nexport default VideoIframe;","map":{"version":3,"names":["React","useState","useParams","VideoIframe","videos","getPlayedVideoInfo","getVideoObject","playingVideoInfo","setPlayingVideoInfo","url","id","playedVideoInfo","filter","video"],"sources":["/Users/mymac/Desktop/bembe-tube/src/Components/VideoIframe.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom';\n// import OnLoadPage from '../Components/OnLoadPage';\nimport '../Components/VideoIframe.css'\n\n\nfunction VideoIframe({ videos, getPlayedVideoInfo, getVideoObject }) {\n\n\t// To capture the information of each video playing video, \"videos\" will be filtered \n\t// to return the video that includes the id is equal to the played video's id.\n\tconst [playingVideoInfo, setPlayingVideoInfo] = useState(null);\n\t// console.log(useParams())\n\tlet url = '';\n\n\t// console.log(videos[0])\n\tconst { id } = useParams()\n\n\tconst playedVideoInfo = videos.filter((video) => {\n\t\tif (video.id === id) {\n\t\t\t// console.log(video)\n\t\t\tgetVideoObject(video)\n\t\t}\n\t})\n\n\t// If the user has not submitted a request for video, display a \"Plese wait...\" message.\n\t// if (videos.length < 1) {\n\t// \treturn (\n\t// \t\t\t<OnLoadPage />    \n\t// \t\t )\n\t//  }\n\n\t// else { \n\n\t// console.log(id)\n\n\tif (id === ':id') {\n\t\turl = `https://www.youtube.com/watch_popup?v=yKJVlADjpus`\n\t\treturn (\n\t\t\t<iframe className='iframe-home iframe-player' title='video' src={url} frameBorder=\"0\" allowFullScreen\n\t\t\t/>\n\t\t)\n\t}\n\t// getPlayedVideoInfo = { getPlayedVideoInfo } \n\telse {\n\t\turl = `https://www.youtube.com/watch_popup?v=${id}`\n\t\treturn (\n\t\t\t<iframe className='iframe-home iframe-player' title='video' src={url} frameBorder=\"0\" allowFullScreen\n\t\t\t\tgetPlayedVideoInfo={getPlayedVideoInfo} />\n\t\t)\n\t}\n\n\t//  }\n}\n\nexport default VideoIframe\n\n\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,OAAO,+BAAP;;AAGA,SAASC,WAAT,OAAqE;EAAA,IAA9CC,MAA8C,QAA9CA,MAA8C;EAAA,IAAtCC,kBAAsC,QAAtCA,kBAAsC;EAAA,IAAlBC,cAAkB,QAAlBA,cAAkB;;EAEpE;EACA;EAHoE,gBAIpBL,QAAQ,CAAC,IAAD,CAJY;EAAA;EAAA,IAI7DM,gBAJ6D;EAAA,IAI3CC,mBAJ2C,kBAKpE;;;EACA,IAAIC,GAAG,GAAG,EAAV,CANoE,CAQpE;;EARoE,iBASrDP,SAAS,EAT4C;EAAA,IAS5DQ,EAT4D,cAS5DA,EAT4D;;EAWpE,IAAMC,eAAe,GAAGP,MAAM,CAACQ,MAAP,CAAc,UAACC,KAAD,EAAW;IAChD,IAAIA,KAAK,CAACH,EAAN,KAAaA,EAAjB,EAAqB;MACpB;MACAJ,cAAc,CAACO,KAAD,CAAd;IACA;EACD,CALuB,CAAxB,CAXoE,CAkBpE;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;;EAEA,IAAIH,EAAE,KAAK,KAAX,EAAkB;IACjBD,GAAG,sDAAH;IACA,oBACC;MAAQ,SAAS,EAAC,2BAAlB;MAA8C,KAAK,EAAC,OAApD;MAA4D,GAAG,EAAEA,GAAjE;MAAsE,WAAW,EAAC,GAAlF;MAAsF,eAAe,MAArG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADD;EAIA,CAND,CAOA;EAPA,KAQK;IACJA,GAAG,mDAA4CC,EAA5C,CAAH;IACA,oBACC;MAAQ,SAAS,EAAC,2BAAlB;MAA8C,KAAK,EAAC,OAApD;MAA4D,GAAG,EAAED,GAAjE;MAAsE,WAAW,EAAC,GAAlF;MAAsF,eAAe,MAArG;MACC,kBAAkB,EAAEJ,kBADrB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADD;EAIA,CA3CmE,CA6CpE;;AACA;;AAED,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}