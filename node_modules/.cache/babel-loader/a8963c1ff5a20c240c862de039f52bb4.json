{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/Desktop/bembe-tube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mymac/Desktop/bembe-tube/src/Components/VideoIframe.js\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // import OnLoadPage from '../Components/OnLoadPage';\n\nfunction VideoIframe(_ref) {\n  var videos = _ref.videos,\n      getPlayedVideoInfo = _ref.getPlayedVideoInfo,\n      getVideoObject = _ref.getVideoObject;\n\n  // To capture the information of each video playing video, \"videos\" will be filtered\n  // to return the video that includes the id is equal to the played video's id.\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      playingVideoInfo = _useState2[0],\n      setPlayingVideoInfo = _useState2[1]; // console.log(useParams())\n\n\n  var url = \"\"; // console.log(videos[0])\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var playedVideoInfo = videos.filter(function (video) {\n    if (video.id === id) {\n      // console.log(video)\n      getVideoObject(video);\n    }\n  });\n\n  if (id === \":id\") {\n    url = \"https://www.youtube.com/watch_popup?v=yKJVlADjpus\";\n    return /*#__PURE__*/React.createElement(\"iframe\", {\n      src: url,\n      className: \"w-screen h-[16rem] md:h-[30rem]\",\n      frameborder: \"1\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowfullscreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }) // <iframe\n    // className=\"w-screen md:h-96 iframe-home iframe-player\"\n    // title=\"video\"\n    // src={url}\n    // frameBorder=\"0\"\n    // allowFullScreen\n    // />\n    ;\n  } else {\n    url = \"https://www.youtube.com/watch_popup?v=\".concat(id);\n    return /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \"video\",\n      className: \"w-screen h-[18rem] md:h-[30rem]\",\n      src: url,\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      getPlayedVideoInfo: getPlayedVideoInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    });\n  }\n}\n\nexport default VideoIframe;","map":{"version":3,"names":["React","useState","useParams","VideoIframe","videos","getPlayedVideoInfo","getVideoObject","playingVideoInfo","setPlayingVideoInfo","url","id","playedVideoInfo","filter","video"],"sources":["/Users/mymac/Desktop/bembe-tube/src/Components/VideoIframe.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport {useParams} from \"react-router-dom\"\n// import OnLoadPage from '../Components/OnLoadPage';\n\nfunction VideoIframe({videos, getPlayedVideoInfo, getVideoObject}) {\n     // To capture the information of each video playing video, \"videos\" will be filtered\n     // to return the video that includes the id is equal to the played video's id.\n     const [playingVideoInfo, setPlayingVideoInfo] = useState(null)\n     // console.log(useParams())\n     let url = \"\"\n\n     // console.log(videos[0])\n     const {id} = useParams()\n\n     const playedVideoInfo = videos.filter((video) => {\n          if (video.id === id) { // console.log(video)\n               getVideoObject(video)\n          }\n     })\n\n     if (id === \":id\") {\n          url = `https://www.youtube.com/watch_popup?v=yKJVlADjpus`\n          return (\n               <iframe src={url}\n                    className=\"w-screen h-[16rem] md:h-[30rem]\"\n                    frameborder=\"1\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen></iframe>\n          // <iframe\n          // className=\"w-screen md:h-96 iframe-home iframe-player\"\n          // title=\"video\"\n          // src={url}\n          // frameBorder=\"0\"\n          // allowFullScreen\n          // />\n          )\n     } else {\n          url = `https://www.youtube.com/watch_popup?v=${id}`\n          return (\n               <iframe title=\"video\" className=\"w-screen h-[18rem] md:h-[30rem]\"\n                    src={url}\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    getPlayedVideoInfo={getPlayedVideoInfo}/>\n          )\n     }\n}\n\nexport default VideoIframe\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,kBAAxB,C,CACA;;AAEA,SAASC,WAAT,OAAmE;EAAA,IAA7CC,MAA6C,QAA7CA,MAA6C;EAAA,IAArCC,kBAAqC,QAArCA,kBAAqC;EAAA,IAAjBC,cAAiB,QAAjBA,cAAiB;;EAC9D;EACA;EAF8D,gBAGdL,QAAQ,CAAC,IAAD,CAHM;EAAA;EAAA,IAGvDM,gBAHuD;EAAA,IAGrCC,mBAHqC,kBAI9D;;;EACA,IAAIC,GAAG,GAAG,EAAV,CAL8D,CAO9D;;EAP8D,iBAQjDP,SAAS,EARwC;EAAA,IAQvDQ,EARuD,cAQvDA,EARuD;;EAU9D,IAAMC,eAAe,GAAGP,MAAM,CAACQ,MAAP,CAAc,UAACC,KAAD,EAAW;IAC5C,IAAIA,KAAK,CAACH,EAAN,KAAaA,EAAjB,EAAqB;MAAE;MAClBJ,cAAc,CAACO,KAAD,CAAd;IACJ;EACL,CAJuB,CAAxB;;EAMA,IAAIH,EAAE,KAAK,KAAX,EAAkB;IACbD,GAAG,sDAAH;IACA,oBACK;MAAQ,GAAG,EAAEA,GAAb;MACK,SAAS,EAAC,iCADf;MAEK,WAAW,EAAC,GAFjB;MAGK,KAAK,EAAC,0FAHX;MAIK,eAAe,MAJpB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADL,CAMA;IACA;IACA;IACA;IACA;IACA;IACA;IAZA;EAcJ,CAhBD,MAgBO;IACFA,GAAG,mDAA4CC,EAA5C,CAAH;IACA,oBACK;MAAQ,KAAK,EAAC,OAAd;MAAsB,SAAS,EAAC,iCAAhC;MACK,GAAG,EAAED,GADV;MAEK,WAAW,EAAC,GAFjB;MAGK,eAAe,MAHpB;MAIK,kBAAkB,EAAEJ,kBAJzB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADL;EAOJ;AACL;;AAED,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}