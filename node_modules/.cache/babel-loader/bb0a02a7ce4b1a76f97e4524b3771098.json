{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/Desktop/bembe-tube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mymac/Desktop/bembe-tube/src/Components/VideoPlayer.js\";\n// import axios from 'axios';\nimport React, { useState } from \"react\";\nimport VideoIframe from \"../Components/VideoIframe\";\nimport VideoCardsPlayer from \"../Components/VideoCardsPlayer\";\nimport Nav from \"./Nav\";\nimport \"../Components/VideoPlayer.css\";\nimport NavBarMiddle from \"../Components/NavBarMiddle\";\n\nfunction VideoPlayer(_ref) {\n  var videos = _ref.videos,\n      handleChange = _ref.handleChange,\n      handleSubmit = _ref.handleSubmit,\n      searchedString = _ref.searchedString,\n      userData = _ref.userData,\n      viewsFunc = _ref.viewsFunc,\n      getUserData = _ref.getUserData,\n      getaddToPlaylist = _ref.getaddToPlaylist,\n      videoId = _ref.videoId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoObject = _useState2[0],\n      setVideoObject = _useState2[1];\n\n  console.log(userData); // console.log(videos[0] !== 'undefined')\n  // const { id } = useParams()\n  // This array will hold added videos as playlist.\n  // let arrayPlaylist = [];\n  // const [addVideo, setAddedVideo] = useState('')\n  // This seState takes care of likes count. It will increament by 1 if Likes/thumbUp is clicked,\n  // and decreamentby 1 if dislike/thumbDown is clicked.\n  // const [likesDisLikeCount, setLikesDisLikeCount] = useState(0);\n  // Increament likes count by 1\n  // const increment = () => {\n  //     likesDisLikeCount === 0 ? setLikesDisLikeCount(likesDisLikeCount + 1) : setLikesDisLikeCount(likesDisLikeCount);\n  // }\n  // icreament likes count by 1\n  // const decrement = () => {\n  //     likesDisLikeCount === 1 ? setLikesDisLikeCount(likesDisLikeCount - 1) : setLikesDisLikeCount(likesDisLikeCount);\n  // }\n  // // This function will add a video url to the array\n  // let arrayPlaylistFunc = (id) => {\n  //     arrayPlaylist.push(`https://www.youtube.com/watch_popup?v=${id}`)\n  //     console.log(arrayPlaylist)\n  // }\n  // HandleChange on each keypress\n  // const handleChange = (event) => {\n  //     event.preventDefault();\n  //     setSearchedString(event.target.value);\n  // }\n  // HandleSubmit submits the searchedString to the getSearchedData function when \"the search icon is clicked\"\n  // const handleSubmit = (event) => {\n  //     event.preventDefault();\n  //     getSearchedData(searchedString)\n  //     setSearchedString('')\n  // }\n  // Let's use useEffect allow the API call once per call.\n  // useEffect(() => {\n  //     getSearchedData(searchedString)\n  //     // setSearchedString(searchedString)\n  // }, []);\n  // Provide the searched string to the yotube API.\n  // async function getSearchedData(searchedString) {\n  //     const axios = require(\"axios\");\n  //     const options = {\n  //         method: 'GET',\n  //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n  //         params: { q: searchedString },\n  //         headers: {\n  //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n  //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n  //         }\n  //     };\n  //     axios.request(options).then(function (response) {\n  //         setVideos(response.data.items)\n  //         setSuggestedVodeos(response.data.refinements)\n  //         // console.log(response.data);\n  //     }).catch(function (error) {\n  //         console.error(error);\n  //     });\n  // }\n  // This function gets the serched id and pass it the function\n  // useEffect(() => {\n  //     getSearchedId(id)\n  // }, [])\n  // Provide the searched string to the yotube API.\n  // async function getSearchedId(id) {\n  //     const axios = require(\"axios\");\n  //     const options = {\n  //         method: 'GET',\n  //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n  //         params: { q: id },\n  //         headers: {\n  //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n  //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n  //         }\n  //     };\n  //     axios.request(options).then(function (response) {\n  //         setVideos(response.data.items)\n  //         setSuggestedVodeos(response.data.refinements)\n  //         // console.log(response.data);\n  //     }).catch(function (error) {\n  //         console.error(error);\n  //     });\n  // }\n\n  var getVideoObject = function getVideoObject(video) {\n    setVideoObject(video);\n    console.log(videoObject);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col video-player-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    searchedString: searchedString,\n    userData: userData,\n    getUserData: getUserData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iframe-and-videoCards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iframe-and-navmiddle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoIframe, {\n    videos: videos,\n    getVideoObject: getVideoObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })))) // /{/* Searched form\n  // <SearchForm\n  //     searchedString={searchedString}\n  //     handleChange={handleChange}\n  //     handleSubmit={handleSubmit}\n  // />\n  // {/* <h1 onClick={\n  //     () => getIndex(1)\n  // }>Click ME, I am Video Player</h1> */}\n  // {/* // <div className='iframe-and-videoCards-container' > */ }\n  // {/* // Video window with suggested videos */ }\n  // {/* // {/* <VideoIframe */ }\n  // {/* //     videos={videos}\n  //     suggestedVodeos={suggestedVideos}\n  // />  */}\n  // {/* The banner below the iframe containing Likes, dislikes, add to playlist...\n  //             <LikesAddPlaylist // {/* Pass the arraylist function to capture all added videos */}\n  // {/* arrayPlaylistFunc={arrayPlaylistFunc}\n  //                 increment={increment}\n  //                 decrement={decrement}\n  //                 likesDisLikeCount={likesDisLikeCount}\n  //             {/* /> */}\n  // {/* Display video cards\n  // <VideoCardsPlayer videos={videos}\n  //     suggestedVodeos={suggestedVideos}\n  // /> */}\n  // {/* </div> */ }\n  ;\n}\n\nexport default VideoPlayer;","map":{"version":3,"names":["React","useState","VideoIframe","VideoCardsPlayer","Nav","NavBarMiddle","VideoPlayer","videos","handleChange","handleSubmit","searchedString","userData","viewsFunc","getUserData","getaddToPlaylist","videoId","videoObject","setVideoObject","console","log","getVideoObject","video"],"sources":["/Users/mymac/Desktop/bembe-tube/src/Components/VideoPlayer.js"],"sourcesContent":["// import axios from 'axios';\nimport React, { useState } from \"react\"\nimport VideoIframe from \"../Components/VideoIframe\"\nimport VideoCardsPlayer from \"../Components/VideoCardsPlayer\"\nimport Nav from \"./Nav\"\nimport \"../Components/VideoPlayer.css\"\nimport NavBarMiddle from \"../Components/NavBarMiddle\"\n\nfunction VideoPlayer({\n  videos,\n  handleChange,\n  handleSubmit,\n  searchedString,\n  userData,\n  viewsFunc,\n  getUserData,\n  getaddToPlaylist,\n  videoId,\n}) {\n  const [videoObject, setVideoObject] = useState({})\n\n  console.log(userData)\n  // console.log(videos[0] !== 'undefined')\n  // const { id } = useParams()\n\n  // This array will hold added videos as playlist.\n  // let arrayPlaylist = [];\n  // const [addVideo, setAddedVideo] = useState('')\n\n  // This seState takes care of likes count. It will increament by 1 if Likes/thumbUp is clicked,\n  // and decreamentby 1 if dislike/thumbDown is clicked.\n  // const [likesDisLikeCount, setLikesDisLikeCount] = useState(0);\n\n  // Increament likes count by 1\n  // const increment = () => {\n  //     likesDisLikeCount === 0 ? setLikesDisLikeCount(likesDisLikeCount + 1) : setLikesDisLikeCount(likesDisLikeCount);\n  // }\n\n  // icreament likes count by 1\n  // const decrement = () => {\n  //     likesDisLikeCount === 1 ? setLikesDisLikeCount(likesDisLikeCount - 1) : setLikesDisLikeCount(likesDisLikeCount);\n  // }\n\n  // // This function will add a video url to the array\n  // let arrayPlaylistFunc = (id) => {\n  //     arrayPlaylist.push(`https://www.youtube.com/watch_popup?v=${id}`)\n  //     console.log(arrayPlaylist)\n  // }\n\n  // HandleChange on each keypress\n  // const handleChange = (event) => {\n  //     event.preventDefault();\n  //     setSearchedString(event.target.value);\n  // }\n\n  // HandleSubmit submits the searchedString to the getSearchedData function when \"the search icon is clicked\"\n  // const handleSubmit = (event) => {\n  //     event.preventDefault();\n  //     getSearchedData(searchedString)\n  //     setSearchedString('')\n  // }\n\n  // Let's use useEffect allow the API call once per call.\n  // useEffect(() => {\n  //     getSearchedData(searchedString)\n  //     // setSearchedString(searchedString)\n  // }, []);\n\n  // Provide the searched string to the yotube API.\n  // async function getSearchedData(searchedString) {\n\n  //     const axios = require(\"axios\");\n\n  //     const options = {\n  //         method: 'GET',\n  //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n  //         params: { q: searchedString },\n  //         headers: {\n  //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n  //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n  //         }\n  //     };\n\n  //     axios.request(options).then(function (response) {\n  //         setVideos(response.data.items)\n  //         setSuggestedVodeos(response.data.refinements)\n  //         // console.log(response.data);\n\n  //     }).catch(function (error) {\n  //         console.error(error);\n  //     });\n  // }\n\n  // This function gets the serched id and pass it the function\n  // useEffect(() => {\n  //     getSearchedId(id)\n  // }, [])\n\n  // Provide the searched string to the yotube API.\n  // async function getSearchedId(id) {\n\n  //     const axios = require(\"axios\");\n\n  //     const options = {\n  //         method: 'GET',\n  //         url: 'https://youtube-search-results.p.rapidapi.com/youtube-search/',\n  //         params: { q: id },\n  //         headers: {\n  //             'X-RapidAPI-Host': 'youtube-search-results.p.rapidapi.com',\n  //             'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n  //         }\n  //     };\n\n  //     axios.request(options).then(function (response) {\n  //         setVideos(response.data.items)\n  //         setSuggestedVodeos(response.data.refinements)\n  //         // console.log(response.data);\n\n  //     }).catch(function (error) {\n  //         console.error(error);\n  //     });\n  // }\n\n  const getVideoObject = (video) => {\n    setVideoObject(video)\n    console.log(videoObject)\n  }\n\n  return (\n    <div className=\"flex-col video-player-body\">\n      <div>\n        <Nav\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          searchedString={searchedString}\n          userData={userData}\n          getUserData={getUserData}\n        />\n      </div>\n\n      <div className=\"iframe-and-videoCards-container\">\n        <div className=\"iframe-and-navmiddle-container\">\n          <VideoIframe videos={videos} getVideoObject={getVideoObject} />\n          {/* <NavBarMiddle\n            videoObject={videoObject}\n            viewsFunc={viewsFunc}\n            getaddToPlaylist={getaddToPlaylist}\n            videoId={videoId}\n            userData={userData}\n          /> */}\n        </div>\n\n        {/* <VideoCardsPlayer videos={videos} viewsFunc={viewsFunc} /> */}\n      </div>\n    </div>\n\n    // /{/* Searched form\n    // <SearchForm\n    //     searchedString={searchedString}\n    //     handleChange={handleChange}\n    //     handleSubmit={handleSubmit}\n    // />\n\n    // {/* <h1 onClick={\n    //     () => getIndex(1)\n    // }>Click ME, I am Video Player</h1> */}\n\n    // {/* // <div className='iframe-and-videoCards-container' > */ }\n\n    // {/* // Video window with suggested videos */ }\n    // {/* // {/* <VideoIframe */ }\n    // {/* //     videos={videos}\n    //     suggestedVodeos={suggestedVideos}\n    // />  */}\n\n    // {/* The banner below the iframe containing Likes, dislikes, add to playlist...\n    //             <LikesAddPlaylist // {/* Pass the arraylist function to capture all added videos */}\n    // {/* arrayPlaylistFunc={arrayPlaylistFunc}\n    //                 increment={increment}\n    //                 decrement={decrement}\n    //                 likesDisLikeCount={likesDisLikeCount}\n    //             {/* /> */}\n\n    // {/* Display video cards\n    // <VideoCardsPlayer videos={videos}\n    //     suggestedVodeos={suggestedVideos}\n    // /> */}\n\n    // {/* </div> */ }\n  )\n}\n\nexport default VideoPlayer\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,+BAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,SAASC,WAAT,OAUG;EAAA,IATDC,MASC,QATDA,MASC;EAAA,IARDC,YAQC,QARDA,YAQC;EAAA,IAPDC,YAOC,QAPDA,YAOC;EAAA,IANDC,cAMC,QANDA,cAMC;EAAA,IALDC,QAKC,QALDA,QAKC;EAAA,IAJDC,SAIC,QAJDA,SAIC;EAAA,IAHDC,WAGC,QAHDA,WAGC;EAAA,IAFDC,gBAEC,QAFDA,gBAEC;EAAA,IADDC,OACC,QADDA,OACC;;EAAA,gBACqCd,QAAQ,CAAC,EAAD,CAD7C;EAAA;EAAA,IACMe,WADN;EAAA,IACmBC,cADnB;;EAGDC,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAHC,CAID;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EAEA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;IAChCJ,cAAc,CAACI,KAAD,CAAd;IACAH,OAAO,CAACC,GAAR,CAAYH,WAAZ;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,4BAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAD;IACE,YAAY,EAAER,YADhB;IAEE,YAAY,EAAEC,YAFhB;IAGE,cAAc,EAAEC,cAHlB;IAIE,QAAQ,EAAEC,QAJZ;IAKE,WAAW,EAAEE,WALf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,eAWE;IAAK,SAAS,EAAC,iCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,gCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,WAAD;IAAa,MAAM,EAAEN,MAArB;IAA6B,cAAc,EAAEa,cAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CAXF,CADF,CA4BE;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EA5DF;AA8DD;;AAED,eAAed,WAAf"},"metadata":{},"sourceType":"module"}